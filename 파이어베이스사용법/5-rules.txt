■ 기본 규칙 양식
rules_version = '2';
service cloud.firestore {
  match/databases/{database}/documents {
    match /{모든문서} {//모든 컬렉션의 모든문서
      allow read, write: if true; // 읽기, 만들기, 수정이 누구나 가능
    }
  }
}

■ 특정 컬렉션을 규정한 규칙 양식
rules_version = '2';
service cloud.firestore {
  match/databases/{database}/documents {
    match/컬렉션네임/{임의이름==**}{//컬렉션의 문서안의 모든 컬렉션 문서
      allow read, create, update: if true; // 읽기, 만들기, 수정이 누구나 가능
    }
  }
}

■ 특정 컬렉션안의 문서의 필드값을 이용한 사용자 권한
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match/컬렉션네임/{모든문서} {
      allow read : if true ; //모두 읽기 가능
      allow create: if request.auth != null; //로그인 사용자만 가능
      allow update: if request.auth.uid  == resource.data.uid;//문서의 uid값이 사용자의  uid와 같으면 가능
    }
  }
}

■ 컬렉션을 규정한 사용자 권한
rules_version = '2';
service cloud.firestore {
  match/databases/{database}/documents { 
    match/{collectionName}/{doc}{
      //컬렉션 이름이 사용자 아이디와 같을 경우 수정가능
    	allow read, write: if request.auth.uid == collectionName;
    }
  }
}

■ 예시
rules_version = '2';
service cloud.firestore {
  match/databases/{database}/documents { 
    match/{document=**}{
    	allow update, delete: if request.auth.uid == resource.data.uid;
      allow read, create : if request.auth != null; 
    }
  }
}

■ 파이어스토리지 규칙
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
        allow read;
        allow write: if request.auth != null;
    }
  }
}

